apply plugin: 'war'
apply plugin: 'cargo'
apply plugin: 'jetty'
apply plugin: "java"
apply plugin: "gwt"
apply plugin: "eclipse"

buildscript {
    repositories {
        jcenter() //repository where to fetch gwt gradle plugin
    }
    dependencies {
        classpath "de.richsource.gradle.plugins:gwt-gradle-plugin:0.6" // GWT
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6.1'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/google-snapshots/"
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

webAppDirName="web"

sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
}

dependencies {
    def cargoVersion = '1.4.4'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

gwt {
    gwtVersion "2.8.2"

    eclipse.addGwtContainer = false;

    minHeapSize = "512M";
    maxHeapSize = "4096M";

    modules 'gwt.react.api_sanity_test.apisanitytest'
    modules 'gwt.react.widget_interop.widget_interop'
    modules 'gwt.react.todo_mvc.todomvc'
    modules 'gwt.react.widget_interop.widget_interop'
    modules 'gwt.react.preact_sanity_test.preactsanitytest'

    dependencies {
        gwt group: 'com.github.gwtreact', name: 'gwt-interop-utils', version: '1.0.+'
        gwt group: 'com.github.gwtreact', name: 'gwt-react', version: '1.0.+'
        gwt group: 'com.github.gwtreact', name: 'gwt-react-router', version: '1.0.+'
        gwt group: 'com.google.jsinterop',  name: 'base', version: '1.0.0-RC1'
        gwt group: 'com.google.elemental2',  name: 'elemental2-core', version: '1.0.0-RC1'
        gwt group: 'com.google.elemental2',  name: 'elemental2-dom', version: '1.0.0-RC1'
    }

    superDev {
        noPrecompile=true
    }
}

tasks.withType(de.richsource.gradle.plugins.gwt.AbstractGwtActionTask) {
    //args "-logLevel", "TRACE"
    args "-generateJsInteropExports"
    //args "-XnoclassMetadata"
    //args "-XmethodNameDisplayMode ABBREVIATED"
    // I've had various problems with this cache and GWT snapshot updates, so it's a good idea to make it easily cleanable
    jvmArgs("-Dgwt.persistentunitcachedir=$project.buildDir/gwt/cache")
}

cargo {
    containerId = 'jetty9x'
    port = 8080

    deployable {
        file = tasks.draftWar.archivePath
        context = 'app'
    }

    local {
        installer {
            installUrl = file("$projectDir/etc/jetty-distribution-9.0.5.v20130815.zip").toURI()
            downloadDir = file("$buildDir/download")
            extractDir = file("$buildDir/extract")
        }
    }
}

task jettyDraftWar(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp=draftWar.archivePath
}

afterEvaluate {
    tasks.cargoStartLocal.dependsOn(tasks.draftWar)
    tasks.cargoRunLocal.dependsOn(tasks.draftWar)
}